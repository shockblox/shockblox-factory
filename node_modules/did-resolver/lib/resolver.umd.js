!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e||self).didResolver={})}(this,function(e){function t(){const e=new Map;return function(t,r){try{let o;function n(n){if(o)return n;const i=e.get(t.didUrl);return void 0!==i?i:Promise.resolve(r()).then(function(r){var n;return"notFound"!==(null==(n=r.didResolutionMetadata)?void 0:n.error)&&e.set(t.didUrl,r),r})}const i=function(){if(t.params&&"true"===t.params["no-cache"])return o=1,Promise.resolve(r())}();return Promise.resolve(i&&i.then?i.then(n):n(i))}catch(e){return Promise.reject(e)}}}function r(e,t){return t()}const n="[a-zA-Z0-9_.%-]",o="[a-zA-Z0-9_.:%-]",i=new RegExp(`^did:([a-zA-Z0-9_]+):(${n}+(:${n}+)*)((;${o}+=${o}*)*)(/[^#?]*)?([?][^#]*)?(#.*)?$`);function s(e){if(""===e||!e)return null;const t=e.match(i);if(t){const r={did:`did:${t[1]}:${t[2]}`,method:t[1],id:t[2],didUrl:e};if(t[4]){const e=t[4].slice(1).split(";");r.params={};for(const t of e){const e=t.split("=");r.params[e[0]]=e[1]}}return t[6]&&(r.path=t[6]),t[7]&&(r.query=t[7].slice(1)),t[8]&&(r.fragment=t[8].slice(1)),r}return null}const c={didResolutionMetadata:{},didDocument:null,didDocumentMetadata:{}};function d(e){return function(t,r,n){try{return Promise.resolve(function(o,i){try{var s=Promise.resolve(e(t,r,n)).then(function(e){return{...c,didResolutionMetadata:{contentType:"application/did+ld+json"},didDocument:e}})}catch(e){return i(e)}return s&&s.then?s.then(void 0,i):s}(0,function(e){return{...c,didResolutionMetadata:{error:"notFound",message:e.toString()}}}))}catch(e){return Promise.reject(e)}}}e.Resolver=class{constructor(e={},n={}){this.registry=e,this.cache=!0===n.cache?t():n.cache||r,n.legacyResolvers&&Object.keys(n.legacyResolvers).map(e=>{this.registry[e]||(this.registry[e]=d(n.legacyResolvers[e]))})}resolve(e,t={}){try{const r=this,n=s(e);if(null===n)return Promise.resolve({...c,didResolutionMetadata:{error:"invalidDid"}});const o=r.registry[n.method];return Promise.resolve(o?r.cache(n,()=>o(n.did,n,r,t)):{...c,didResolutionMetadata:{error:"unsupportedDidMethod"}})}catch(e){return Promise.reject(e)}}},e.inMemoryCache=t,e.noCache=r,e.parse=s,e.wrapLegacyResolver=d});
//# sourceMappingURL=resolver.umd.js.map
