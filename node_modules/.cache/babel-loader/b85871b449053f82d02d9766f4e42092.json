{"remainingRequest":"/Users/dwhite/Documents/Code/shockblox-factory/node_modules/babel-loader/lib/index.js!/Users/dwhite/Documents/Code/shockblox-factory/src/dapp/config/wallet.js","dependencies":[{"path":"/Users/dwhite/Documents/Code/shockblox-factory/src/dapp/config/wallet.js","mtime":1631858212890},{"path":"/Users/dwhite/Documents/Code/shockblox-factory/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dwhite/Documents/Code/shockblox-factory/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9kd2hpdGUvRG9jdW1lbnRzL0NvZGUvc2hvY2tibG94LWZhY3Rvcnkvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCBXYWxsZXRDb25uZWN0UHJvdmlkZXIgZnJvbSAnQHdhbGxldGNvbm5lY3Qvd2ViMy1wcm92aWRlcic7CmltcG9ydCB7IFRocmVlSWRDb25uZWN0LCBFdGhlcmV1bUF1dGhQcm92aWRlciB9IGZyb20gJ0AzaWQvY29ubmVjdCc7CmltcG9ydCBBdXRoZXJldW0gZnJvbSAnYXV0aGVyZXVtJzsKaW1wb3J0IEZvcnRtYXRpYyBmcm9tICdmb3J0bWF0aWMnOwppbXBvcnQgV2ViM01vZGFsIGZyb20gJ3dlYjNtb2RhbCc7IC8vIEB0cy1pZ25vcmUKCmV4cG9ydCB2YXIgdGhyZWVJRCA9IG5ldyBUaHJlZUlkQ29ubmVjdCgpOwpleHBvcnQgdmFyIHdlYjNNb2RhbCA9IG5ldyBXZWIzTW9kYWwoewogIG5ldHdvcms6ICdtYWlubmV0JywKICBjYWNoZVByb3ZpZGVyOiB0cnVlLAogIHByb3ZpZGVyT3B0aW9uczogewogICAgd2FsbGV0Y29ubmVjdDogewogICAgICAicGFja2FnZSI6IFdhbGxldENvbm5lY3RQcm92aWRlciwKICAgICAgb3B0aW9uczogewogICAgICAgIGluZnVyYUlkOiAnYzc4ZmM5YTU0M2UwNDRjNWExZWQ0OTI5MTQ4NmI1ZTQnCiAgICAgIH0KICAgIH0sCiAgICBmb3J0bWF0aWM6IHsKICAgICAgInBhY2thZ2UiOiBGb3J0bWF0aWMsCiAgICAgIG9wdGlvbnM6IHsKICAgICAgICBrZXk6ICdwa19saXZlXzlBNzZBRTMxRjYzRkQxMTgnCiAgICAgIH0KICAgIH0sCiAgICBhdXRoZXJldW06IHsKICAgICAgInBhY2thZ2UiOiBBdXRoZXJldW0sCiAgICAgIG9wdGlvbnM6IHt9CiAgICB9CiAgfQp9KTsKZXhwb3J0IGZ1bmN0aW9uIGdldFByb3ZpZGVyKCkgewogIHJldHVybiBfZ2V0UHJvdmlkZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKfQoKZnVuY3Rpb24gX2dldFByb3ZpZGVyKCkgewogIF9nZXRQcm92aWRlciA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgIHZhciBldGhQcm92aWRlciwgYWRkcmVzc2VzOwogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjsKICAgICAgICAgICAgcmV0dXJuIHdlYjNNb2RhbC5jb25uZWN0KCk7CgogICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICBldGhQcm92aWRlciA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA1OwogICAgICAgICAgICByZXR1cm4gZXRoUHJvdmlkZXIuZW5hYmxlKCk7CgogICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICBhZGRyZXNzZXMgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gODsKICAgICAgICAgICAgcmV0dXJuIHRocmVlSUQuY29ubmVjdChuZXcgRXRoZXJldW1BdXRoUHJvdmlkZXIoZXRoUHJvdmlkZXIsIGFkZHJlc3Nlc1swXSkpOwoKICAgICAgICAgIGNhc2UgODoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgdGhyZWVJRC5nZXREaWRQcm92aWRlcigpKTsKCiAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZSk7CiAgfSkpOwogIHJldHVybiBfZ2V0UHJvdmlkZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKfQ=="},{"version":3,"sources":["/Users/dwhite/Documents/Code/shockblox-factory/src/dapp/config/wallet.js"],"names":["WalletConnectProvider","ThreeIdConnect","EthereumAuthProvider","Authereum","Fortmatic","Web3Modal","threeID","web3Modal","network","cacheProvider","providerOptions","walletconnect","options","infuraId","fortmatic","key","authereum","getProvider","connect","ethProvider","enable","addresses","getDidProvider"],"mappings":";;AAAA,OAAOA,qBAAP,MAAkC,8BAAlC;AACA,SAASC,cAAT,EAAyBC,oBAAzB,QAAqD,cAArD;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,OAAOC,SAAP,MAAsB,WAAtB,C,CAEA;;AACA,OAAO,IAAMC,OAAO,GAAG,IAAIL,cAAJ,EAAhB;AAEP,OAAO,IAAMM,SAAS,GAAG,IAAIF,SAAJ,CAAc;AACrCG,EAAAA,OAAO,EAAE,SAD4B;AAErCC,EAAAA,aAAa,EAAE,IAFsB;AAGrCC,EAAAA,eAAe,EAAE;AACfC,IAAAA,aAAa,EAAE;AACb,iBAASX,qBADI;AAEbY,MAAAA,OAAO,EAAE;AACPC,QAAAA,QAAQ,EAAE;AADH;AAFI,KADA;AAOfC,IAAAA,SAAS,EAAE;AACT,iBAASV,SADA;AAETQ,MAAAA,OAAO,EAAE;AACPG,QAAAA,GAAG,EAAE;AADE;AAFA,KAPI;AAafC,IAAAA,SAAS,EAAE;AACT,iBAASb,SADA;AAETS,MAAAA,OAAO,EAAE;AAFA;AAbI;AAHoB,CAAd,CAAlB;AAuBP,gBAAsBK,WAAtB;AAAA;AAAA;;;yEAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACqBV,SAAS,CAACW,OAAV,EADrB;;AAAA;AACCC,YAAAA,WADD;AAAA;AAAA,mBAEmBA,WAAW,CAACC,MAAZ,EAFnB;;AAAA;AAECC,YAAAA,SAFD;AAAA;AAAA,mBAGCf,OAAO,CAACY,OAAR,CAAgB,IAAIhB,oBAAJ,CAAyBiB,WAAzB,EAAsCE,SAAS,CAAC,CAAD,CAA/C,CAAhB,CAHD;;AAAA;AAAA,6CAIEf,OAAO,CAACgB,cAAR,EAJF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import WalletConnectProvider from '@walletconnect/web3-provider'\nimport { ThreeIdConnect, EthereumAuthProvider } from '@3id/connect'\nimport Authereum from 'authereum'\nimport Fortmatic from 'fortmatic'\nimport Web3Modal from 'web3modal'\n\n// @ts-ignore\nexport const threeID = new ThreeIdConnect()\n\nexport const web3Modal = new Web3Modal({\n  network: 'mainnet',\n  cacheProvider: true,\n  providerOptions: {\n    walletconnect: {\n      package: WalletConnectProvider,\n      options: {\n        infuraId: 'c78fc9a543e044c5a1ed49291486b5e4',\n      },\n    },\n    fortmatic: {\n      package: Fortmatic,\n      options: {\n        key: 'pk_live_9A76AE31F63FD118',\n      },\n    },\n    authereum: {\n      package: Authereum,\n      options: {},\n    },\n  },\n})\n\nexport async function getProvider() {\n  const ethProvider = await web3Modal.connect()\n  const addresses = await ethProvider.enable()\n  await threeID.connect(new EthereumAuthProvider(ethProvider, addresses[0]))\n  return threeID.getDidProvider()\n}\n"]}]}